(global-set-key (kbd "<escape>") 'keyboard-escape-quit)


;; (set-face-attribute 'variable-pitch nil
;; 		    :font "Ubuntu Nerd Font"
;; 		    :height 130
;; 		    :weight 'medium)
;; (set-face-attribute 'fixed-pitch nil
;; 		    :font "JetBrainsMono NF"
;; 		    :height 120
;; 		    :weight 'medium)

;; ref: https://gitlab.com/dwt1/configuring-emacs/-/blob/main/07-the-final-touches/config.org?ref_type=heads#evil
;; (set-face-attribute 'font-lock-keyword-face nil
;; 		    :slant 'italic)
;; (set-face-attribute 'font-lock-comment-face nil
;; 		    :slant 'italic)

;; (add-to-list 'default-frame-alist '(font . "JetBrainsMono NF-12")) 

;; completion - CO(mpletion in) R(egion) FU(unction)
(use-package corfu
  :custom
  (corfu-cycle t)
  (corfu-preview-current t)
  (corfu-auto t)
  (corfu-auto-delay 0)
  (corfu-auto-prefix 0)
  (corfu-preselect-first t)
  (corfu-quit-at-boundary 'separator)
  (corfu-separator ?\s)
  (corfu-quit-no-match 'separator)
  :init
  (global-corfu-mode)
  :config
  (define-key corfu-map (kbd "<RET>") nil)
  ;; ref: https://github.com/minad/corfu/issues/12#issuecomment-1171033435
  (define-key corfu-map "\C-l" #'corfu-insert)
  (define-key corfu-map "\C-y" #'corfu-insert)
  (define-key corfu-map "\C-e" #'corfu-quit)
  (define-key corfu-map "\C-n" #'corfu-next)
  (define-key corfu-map "\C-p" #'corfu-previous))

(use-package kind-icon
  :after corfu
  :custom
  (kind-icon-use-icons t)
  (kind-icon-default-face 'corfu-default)
  (kind-icon-blend-background nil)
  (kind-icon-blend-frac 0.08)
  ;;(svg-lib-icons-dir (no-littering-expand-var-file-name "svg-lib/cache/"))
  :config
  (add-to-list 'corfu-margin-formatters #'kind-icon-margin-formatter))


(use-package orderless
  :custom
  (completion-styles '(orderless basic))
  (completion-category-defaults nil)
  (completion-category-overrides '((file (styles partial-completion)))))


;; command log mode
(use-package command-log-mode
  :config
  (global-command-log-mode 1)
  (clm/open-command-log-buffer))

;; (use-package all-the-icons)

; modeline, for now following vid, TODO: find modeline or configure mine
;; (use-package doom-modeline
;;   :init (doom-modeline-mode 1)
;;   :custom
;;   (doom-modeline-height 15))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages nil)
 '(warning-suppress-log-types '((elpaca core 31.0.50))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
(use-package tree-sitter)

;; cannot use in current state (25.03.01)
;; (use-package nix-ts-mode
;;   :hook (nix-ts-mode . lsp-deferred)
;;   :mode "\\.nix\\'")

(use-package hyprlang-ts-mode
  ;; :custom
  ;; (hyprlang-ts-mode-indent-offset 4)
  )

;; (use-package dirvish
;;   :init
;;   (dirvish-override-dired-mode)
;;   :custom
;;   (dirvish-quick-access-entries
;;    '(("h" "~/" "Home")
;;      ("d" "~/Downloads/" "Downloads")
;;      ("m" "/mnt/" "Drives")
;;      ("c" "~/repo/dotfiles/emacs/" "Config")))
;;   :config
;;   (dirvish-peek-mode)
;;   (dirvish-side-follow-mode)
;;   (setq dirvish-mode-line-format
;; 	'(:left (sort symlink) :right (omit yank index)))
;;   (setq dirvish-att
;; 	'(nerd-icons file-time file-size collapse subtree-state vc-state git-msg)
;; 	dirvish-side-attributes
;; 	'(vc-state file-size nerd-icons collapse))
;;   (setq delete-by-moving-to-trash t)
;;   (setq dired-listing-switches
;; 	"-l --almost-all --human-readable --group-directories-first --no-group")
;;   :bind
;;   (("C-c f" . dirvish)
;;    :map dirvish-mode-map
;;    ("?" . dirvish-dispatch)
;;    ("a" . dirvish-quick-access)
;;     ("f" . dirvish-file-info-menu)
;;     ("y" . dirvish-yank-menu)
;;     ("N" . dirvish-narrow)
;;     ("^" . dirvish-history-last)
;;     ("h" . dirvish-history-jump)
;;     ("s" . dirvish-quicksort)
;;     ("v" . dirvish-vc-menu)
;;    )
;;   )

(use-package diredfl
  :hook
  ((dired-mode . diredfl-mode))
  ;;  (dirvish-directory-view-mode . diredfl-mode))
  :config
  (set-face-attribute 'diredfl-dir-name nil :bold t))

(use-package nerd-icons)
